!function(e){var n={};function t(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./src/index.js")}({"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _js = __webpack_require__(/*! ./js */ \"./src/js/index.js\");\n\nvar turn = 0;\nvar edges = [];\nvar redScore = 0;\nvar blueScore = 0;\nvar SIDES = 8;\nvar newEdge;\n\n// var createTable = require('./createTable.js');\n// var isLegitEdge = require('./isLegitEdge.js');\n\nfunction handleClick(e) {\n  var activeElements = document.querySelectorAll(\".active\");\n  if (activeElements.length > 0) {\n    var edge = (0, _js.isLegitEdge)(activeElements[0], this);\n    if (edge) {\n      activeElements[0].classList.toggle(\"active\");\n      processEdge(this, edge);\n    } else {\n      activeElements[0].classList.toggle(\"active\");\n      if (this.id != activeElements[0].id) {\n        this.classList.toggle(\"active\");\n      }\n    }\n  } else {\n    this.classList.toggle(\"active\");\n  }\n}\n\nfunction processEdge(element, dir) {\n  newEdge = document.createElement('div');\n  var edgeAlreadyTaken = Array.from(element.querySelectorAll('div')).find(function (el) {\n    return el.classList.value.split('-')[0] === dir;\n  });\n  if (turn % 2 === 0) {\n    // element.innerHTML += `<div class='${dir}-blue'></div>`;\n    if (edgeAlreadyTaken) return turn++;\n    newEdge.classList.add(dir + \"-blue\");\n    element.appendChild(newEdge);\n  } else {\n    // element.innerHTML += `<div class='${dir}-red'></div>`;\n    if (edgeAlreadyTaken) return turn++;\n    newEdge.classList.add(dir + \"-red\");\n    element.appendChild(newEdge);\n  }\n  createEdge(element, dir);\n  turn++;\n}\n\nfunction createEdge(element, dir) {\n  //[{r: _, c:_}, {r:_, c:_}]\n  var dest = element.id.split(\"x\");\n  dest = { r: Number(dest[1]), c: Number(dest[2]) };\n  var orig;\n  if (dir === 'left') orig = { r: dest.r, c: dest.c - 1 };\n  if (dir === 'right') orig = { r: dest.r, c: dest.c + 1 };\n  if (dir === 'up') orig = { r: dest.r - 1, c: dest.c };\n  if (dir === 'down') orig = { r: dest.r + 1, c: dest.c };\n  edges.push([orig, dest]);\n  edges.push([dest, orig]);\n  //check for square completion\n  if (dir == 'left' || dir == 'right') checkUpandDown();\n  if (dir == 'up' || dir == 'down') checkLeftandRight();\n}\n\nfunction checkUpandDown() {\n  var lastEdge = edges.slice(-1)[0];\n  var topLeft = { r: lastEdge[0].r - 1, c: lastEdge[0].c };\n  var topRight = { r: lastEdge[1].r - 1, c: lastEdge[1].c };\n  var bottomLeft = { r: lastEdge[0].r + 1, c: lastEdge[0].c };\n  var bottomRight = { r: lastEdge[1].r + 1, c: lastEdge[1].c };\n  if (topEdgeFound() && bottomEdgeFound()) {\n    //fill square above and below\n    updateScores(2);\n  } else if (topEdgeFound()) {\n    //fill square above\n    updateScores(1);\n  } else if (bottomEdgeFound()) {\n    //fill square below\n    updateScores(1);\n  }\n  function topEdgeFound() {\n    return findEdge(lastEdge[0], topLeft) && findEdge(lastEdge[1], topRight) && findEdge(topLeft, topRight);\n  }\n  function bottomEdgeFound() {\n    return findEdge(lastEdge[0], bottomLeft) && findEdge(lastEdge[1], bottomRight) && findEdge(bottomLeft, bottomRight);\n  }\n}\nfunction checkLeftandRight() {\n  var lastEdge = edges.slice(-1)[0];\n  var topLeft = { r: lastEdge[0].r, c: lastEdge[0].c - 1 };\n  var topRight = { r: lastEdge[0].r, c: lastEdge[0].c + 1 };\n  var bottomLeft = { r: lastEdge[1].r, c: lastEdge[1].c - 1 };\n  var bottomRight = { r: lastEdge[1].r, c: lastEdge[1].c + 1 };\n  if (leftSideFound() && rightSideFound()) {\n    //fill both squares\n    updateScores(2);\n  } else if (leftSideFound()) {\n    //fill square above\n    updateScores(1);\n  } else if (rightSideFound()) {\n    //fill square below\n    updateScores(1);\n  }\n  function leftSideFound() {\n    return findEdge(lastEdge[0], topLeft) && findEdge(lastEdge[1], bottomLeft) && findEdge(topLeft, bottomLeft);\n  }\n  function rightSideFound() {\n    return findEdge(lastEdge[0], topRight) && findEdge(lastEdge[1], bottomRight) && findEdge(topRight, bottomRight);\n  }\n}\n\nfunction updateScores(inc) {\n  if (turn-- % 2 === 0) {\n    blueScore += inc;\n    document.querySelector('.bluescore').classList.add('animate');\n    document.querySelector('.bluescore').addEventListener('animationend', function () {\n      this.classList.remove('animate');\n    });\n  } else {\n    redScore += inc;\n    document.querySelector('.redscore').classList.add('animate');\n    document.querySelector('.redscore').addEventListener('animationend', function () {\n      this.classList.remove('animate');\n    });\n  }\n  console.log(\"turn: \" + turn);\n  document.getElementById('bluescore').innerHTML = blueScore;\n  document.getElementById('redscore').innerHTML = redScore;\n  if (edges.length === 2 * 2 * SIDES * (SIDES - 1)) {\n    if (redScore > blueScore) redWins();else if (redScore < blueScore) blueWins();else itsATie();\n  }\n}\n\nvar title = document.querySelector('.title');\nvar playAgain = document.querySelector('.play-again');\n\nfunction redWins() {\n  title.innerHTML = 'Red Wins!';\n  title.style.color = 'red';\n  title.style.fontSize = '3rem';\n  playAgain.style.display = 'block';\n}\n\nfunction blueWins() {\n  title.innerHTML = 'Blue Wins!';\n  title.style.color = 'blue';\n  title.style.fontSize = '3rem';\n  playAgain.style.display = 'block';\n}\n\nfunction itsATie() {\n  title.innerHTML = \"It's a Tie!\";\n  title.style.fontSize = '3rem';\n  playAgain.style.display = 'block';\n}\n\nfunction resetGame() {\n  window.location.reload();\n}\n\nfunction findEdge(orig, dest) {\n  for (var i = 0; i < edges.length; i++) {\n    if (edges[i][0].r === orig.r && edges[i][0].c === orig.c && edges[i][1].r === dest.r && edges[i][1].c === dest.c) return true;\n  }\n  return false;\n}\n\nwindow.onload = function () {\n  (0, _js.createTable)(SIDES);\n  document.querySelectorAll(\"#matrix td\").forEach(function (e, i) {\n    e.onclick = handleClick;\n  });\n  document.querySelector('.play-again').addEventListener('click', resetGame);\n  document.querySelector('.reset').addEventListener('click', resetGame);\n};\n\n//# sourceURL=webpack:///./src/index.js?")},"./src/js/createTable.js":
/*!*******************************!*\
  !*** ./src/js/createTable.js ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar createTable = exports.createTable = function createTable(side) {\n  var tbody = document.getElementById(\"matrix\");\n  tbody.innerHTML = '';\n  for (var row = 0; row < side; row++) {\n    var tr = document.createElement(\"tr\");\n    for (var col = 0; col < side; col++) {\n      tr.innerHTML += \"<td id='x\" + row + \"x\" + col + \"'>\\n                        <div class='dot'></div>\\n                      </td>\";\n    }\n    tbody.appendChild(tr);\n    fadeInDots();\n    // then remove animation class from dots\n    setTimeout(function () {\n      var dots = document.querySelectorAll('.dot');\n      for (var i = 0; i < dots.length; i++) {\n        dots[i].style.opacity = '1';\n        dots[i].classList.remove('appear');\n      }\n    }, 2400);\n  }\n};\n\nfunction fadeInDots() {\n  var dots = document.querySelectorAll('.dot');\n\n  var _loop = function _loop(i) {\n    setTimeout(function () {\n      dots[i].classList.add('appear');\n    }, 100 + Math.random() * 1500);\n  };\n\n  for (var i = 0; i < dots.length; i++) {\n    _loop(i);\n  }\n}\n\n// module.exports = createTable;\n\n//# sourceURL=webpack:///./src/js/createTable.js?")},"./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _isLegitEdge = __webpack_require__(/*! ./isLegitEdge.js */ "./src/js/isLegitEdge.js");\n\nObject.defineProperty(exports, \'isLegitEdge\', {\n  enumerable: true,\n  get: function get() {\n    return _isLegitEdge.isLegitEdge;\n  }\n});\n\nvar _createTable = __webpack_require__(/*! ./createTable.js */ "./src/js/createTable.js");\n\nObject.defineProperty(exports, \'createTable\', {\n  enumerable: true,\n  get: function get() {\n    return _createTable.createTable;\n  }\n});\n\n//# sourceURL=webpack:///./src/js/index.js?')},"./src/js/isLegitEdge.js":
/*!*******************************!*\
  !*** ./src/js/isLegitEdge.js ***!
  \*******************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar isLegitEdge = exports.isLegitEdge = function isLegitEdge(prev, current) {\n  var thisID = current.id.split("x");\n  var thisRow = Number(thisID[1]);\n  var thisCol = Number(thisID[2]);\n  var activeID = prev.id.split("x");\n  var activeRow = Number(activeID[1]);\n  var activeCol = Number(activeID[2]);\n  if (thisRow == activeRow && thisCol == activeCol - 1) return "right";\n  if (thisRow == activeRow && thisCol == activeCol + 1) return "left";\n  if (thisCol == activeCol && thisRow == activeRow - 1) return "down";\n  if (thisCol == activeCol && thisRow == activeRow + 1) return "up";\n  return false;\n};\n\n// module.exports = isLegitEdge;\n\n//# sourceURL=webpack:///./src/js/isLegitEdge.js?')}});